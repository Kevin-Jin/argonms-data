I coded the path constants in the source file kvjcompiler.WzCompiler, so you're
going to have to edit those yourselves (make sure they're the fully qualified
absolute path to wherever you want them to point to. No relative paths here).
Heed the warning in all caps next to the constants, and make sure they have a
trailing backslash if a Windows environment, or a trailing slash in an Unix-like
environment!

No external libraries are necessary. The only API needed is StAX (Streaming API
for XML), which should be included with JRE 6 and later. An independent
LittleEndianWriter is used instead of the one in OdinMS, and the sample
WzInterpreter that is included uses its own LittleEndianReader. If you wish to
use the OdinMS classes instead of the included ones, some code may need to be
modified since they use 2-byte chars (UTF-8?) instead of 1-byte, and you have to
be careful to read/write null terminated strings instead of a MapleAsciiString
(which is basically just an ASCII encoding with a 2-byte prefix that indicates
the string's length).

I included a sample WzInterpreter. It is extremely simple, but it should be able
to help you get familiar with the binary structure so you can put it in your own
OdinMS environment. I didn't model any of the map structures exactly like the
OdinMS classes, so you have to figure it out somewhat.